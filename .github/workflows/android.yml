name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
      
  test: 
    needs: build
    runs-on: ubuntu-latest 
    steps: 
    - uses: actions/checkout@v3 
    - name: set up JDK 17 
      uses: actions/setup-java@v3 
      with: 
        java-version: '17' 
        distribution: 'temurin'
        cache: gradle 
    - name: Grant execute permission for gradlew 
      run: chmod +x gradlew 
    - name: Run Linter and Test 
      run: ./gradlew check 
    - name: Upload Reports 
      uses: actions/upload-artifact@v2 
      with: 
        name: Test-Reports 
        path: app/build/reports 
      if: always()


#   run-ui-tests:
#       runs-on: macOS-latest
#       steps:
#       - uses: actions/checkout@v3
#       - name: set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#           cache: gradle
#       - name: Grant execute permission for gradlew
#         run: chmod +x gradlew
#       - name: Run UI test
#         uses: ReactiveCircus/android-emulator-runner@v2.28.0  
#         with:
#           api-level: 29
#           script: ./gradlew connectedDebugAndroidTest
#       - name: Upload Reports
#         uses: actions/upload-artifact@v2
#         with:
#           name: UI-Test-Reports
#           path: app/build/reports



  coverage:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Builddlew
        run: ./gradlew build
      - name: Run Tests
        run: ./gradlew test
      - name: Run Test Coverage
        run: ./gradlew testDebugUnitTestCoverageVerification
      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: "**/testDebugUnitTestCoverage.csv"
      - name: upload coverage report
        uses: actions/upload-artifact@v3.1.2
        with:
          name: coverage report
          path: app/build/reports/jacoco/testDebugUnitTestCoverage/html

  publish:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew assembleDebug
      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: APKFile
          path: app/build/outputs/apk/debug/**.apk
     
      - name: Bump release version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.1.0
        with:
          current-version: '0.0.1-alpha.1' # also accepted: 'v2.11.7-alpha.3' | '2.11.7-alpha3'
          version-fragment: 'feature'
      - name: Do something with your bumped release version
        run: echo ${{ steps.bump_version.outputs.next-version }}  # will print 2.12.0

    # Checkout main branch and build the APK  
  build-main:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v3
      with:
       ref: main
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build Master APK
      run: ./gradlew assembleDebug && mv app/build/outputs/apk/debug/app-debug.apk app/build/outputs/apk/debug/app-master.apk
    - name: Upload APK
      uses: actions/upload-artifact@v1
      with:
        name: apk_master
        path: app/build/outputs/apk/debug/app-master.apk

      # Checkout PR branch and build the APK
  build-pr:
        runs-on: macOS-latest
        needs: build-main
        steps:
        - uses: actions/checkout@v3
        - name: set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'
            cache: gradle
        - name: Grant execute permission for gradlew
          run: chmod +x gradlew
        - name: Build PR APK
          run: ./gradlew assembleDebug && mv app/build/outputs/apk/debug/app-debug.apk app/build/outputs/apk/debug/app-pr.apk
        - name: Upload APK
          uses: actions/upload-artifact@v1
          with:
            name: apk_pr
            path: app/build/outputs/apk/debug/app-pr.apk
        
  apk-diff:
      needs: [build-main, build-pr]
      runs-on: macOS-latest
      steps:
        - uses: actions/checkout@v1
        - name: Install diffuse
          run: brew install JakeWharton/repo/diffuse
        - name: download artifact
          uses: actions/download-artifact@v2.1.1  
          with:
              name: apk_master
              path: app/build/outputs/apk/debug/app-master
        - name: download artifact
          uses: actions/download-artifact@v2.1.1
          with:
              name: apk_pr
              path: app/build/outputs/apk/debug/app-pr
        - name: run differ
          run: diffuse diff app/build/outputs/apk/debug/app-master/app-master.apk app/build/outputs/apk/debug/app-pr/app-pr.apk


  deploy: 
    runs-on: ubuntu-latest 
    steps: 
      - uses: actions/checkout@v3 
      - name: Docker Build & Push Action 
        uses: mr-smithers-excellent/docker-build-push@v6.2 
        with: 
          image: shraddhapathakrsl/ci_cd_pipeline-${{ steps.bump_version.outputs.next-version }}
          registry: docker.io 
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}



